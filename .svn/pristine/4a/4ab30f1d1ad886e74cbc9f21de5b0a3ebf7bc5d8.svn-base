<?php


class EcommerceNewsletterCampaignMonitorSignupDecoratorFormFixes extends Extension {

	public function updateFields($fields) {
		if($this->hasCampaignMonitorPage()) {
			$config = EcommerceDBConfig::current_ecommerce_db_config();
			$fields->push(new HeaderField("CampaignMonitorNewsletterSignupHeader", $config->CampaignMonitorSignupHeader, 3));
			$fields->push(new LiteralField("CampaignMonitorNewsletterSignupContent", "<p class=\"campaignMonitorNewsletterSignupContent\">".$config->CampaignMonitorSignupIntro."</p>"));
			$fields->push(new CheckboxField("CampaignMonitorNewsletterSubscribeCheckBox", $config->CampaignMonitorSignupLabel)));
		}
	}

	/**
	 * returns ID of Mailing List that people are subscribing to.
	 * @return CampaignMonitorPage
	 */
	protected function hasCampaignMonitorPage(){
		$config = EcommerceDBConfig::current_ecommerce_db_config();
		return $config->CampaignMonitorSignupPageID ? true : false;
	}

	/**
	 * returns ID of Mailing List that people are subscribing to.
	 * @return CampaignMonitorPage
	 */
	protected function campaignMonitorPage(){
		$config = EcommerceDBConfig::current_ecommerce_db_config();
		return $config->CampaignMonitorSignupPage();
	}

	/**
	 * adds the user to the list ...
	 * @param Array $data
	 * @param Form $form
	 * @param Order $order
	 * @param Member $member
	 */
	function saveAddressExtension($data, $form, $order = null, $member = null){
		if(isset($data["CampaignMonitorNewsletterSubscribeCheckBox"]) && $data["CampaignMonitorNewsletterSubscribeCheckBox"]) {
			if($this->hasCampaignMonitorPage()) {
				$campaignMonitorPage = $this->campaignMonitorPage();
				if($campaignMonitorPage) {
					$campaignMonitorPage->addSubscriber($data["Email"]);
				}
			}
		}
	}

}
